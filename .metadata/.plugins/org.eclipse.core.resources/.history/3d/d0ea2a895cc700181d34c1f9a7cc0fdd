import java.io.*;
import java.util.*;
import java.text.*;

public class abc
{
	final static int limit = 500;

	public static void main(String args[]) throws FileNotFoundException
	{
 		new MyInfo().identity();

		int a[] = takeInput();
		int b[] = a;
		int c[] = b;
		int d[] = c;
		int e[] = d;

		int pratt[] = getPrattSequence();

		int prime[] = getPrimes();

		int habibi[] = getHibbardsSequence();

		int powerOfTwo[] = getPowersOfTwo();

		long start = System.nanoTime();
		a = shellSort(a,pratt);
		long end = System.nanoTime() - start;
		System.out.println("Time taken with Pratts Sequence : "+end/100 );
		System.out.println("Sorted List Elements of A[100], A[125], A[250], A[700], A[900] : "+a[100]+"\t"+a[125]+"\t"+a[250]+"\t"+a[700]+"\t"+a[900]);

		start = System.nanoTime();
		b = shellSort(b,prime);
		end = System.nanoTime() - start;
		System.out.println("Time taken with Prime numbers : "+end/100 );

		start = System.nanoTime();
		c = shellSort(c,habibi);
		end = System.nanoTime() - start;
		System.out.println("Time taken with Hibbards sequence : "+end/100 );
		
		start = System.nanoTime();
		d = shellSort(d,powerOfTwo);
		end = System.nanoTime() - start;
		System.out.println("Time taken with a sequecne of power of two : "+end/100);
		
		Arrays.sort(e);

		int f[] = {100,125,250,700,900};

		System.out.println("\n\nChecking if all the arrays have the same output\n");
		for (int i : f) 
		{
			System.out.print("The "+i+"th element : ");

			if(a[i] == b[i] && b[i] == c[i] && c[i] == d[i] && d[i] == e[i])
			{
				System.out.println(e[i] + ", which is Same in all arrays");
			}
			else
			{
				System.out.println(e[i] + " which IS NOT same in all arrays");
			}
			
		}System.out.println("\n");
		
 	}

 	public static int [] takeInput() throws FileNotFoundException
    {
        File f1 = new File("C:\\\\Users\\\\TejasviniAditya\\\\Documents\\\\Java\\\\Assignment3\\\\src\\\\inputData3B.txt");
        
        Scanner filereader = new Scanner(f1);
        
        int inputData[] = new int[1000];
        
        int i = 0;
        
        while (filereader.hasNextInt()) 
        {
            inputData[i++] = filereader.nextInt();
        }
        return inputData;
    }

    public static int []  getPrattSequence()
    {
    	ArrayList<Integer> gapSequence = new ArrayList<Integer>();

    	int pq;
    	
    	for (int p = 0; p < limit; p++) 
    	{
			for (int q = 0; q < limit; q++) 
			{
            	pq = (int)( Math.pow(2,p) ) * (int)( Math.pow(3,q) );

            	if (pq < limit)
                {
                	gapSequence.add(pq);
                }
                else break;
        	}
    	}
    	Collections.sort(gapSequence);

    	int[] prattSequence = new int[gapSequence.size()];
    	
    	int index = gapSequence.size()-1; 

    	for(int i : gapSequence)
    	{	
    		prattSequence[index--] = i;
    	}
    	return prattSequence;
    }

    public static int[] getPrimes()
    {
    	ArrayList<Integer> gapSequence = new ArrayList<Integer>();
    	
    	
        
        for(int i=1; i < limit; i++)
        {
		     boolean isPrime = true;
			
			for(int j=2; j < i ; j++)
			{
				if(i % j == 0)
				{
                 	isPrime = false;
                    break;
                }
         	}
		    if(isPrime)
		    {
		    	gapSequence.add(i);
		    }	   
        }
        int[] primeSequence = new int[gapSequence.size()];
    	
    	int index = gapSequence.size()-1; 

    	for(int i : gapSequence)
    	{	
    		primeSequence[index--] = i;
    	}
    	return primeSequence;
    }

    public static int[] getHibbardsSequence()
    {
    	ArrayList<Integer> gapSequence = new ArrayList<Integer>();

    	int temp = 0;

    	for (int i = 1; temp < limit; i++ ) 
    	{
    		temp = (int)(java.lang.Math.pow(2,i))-(int)1;	

    		if(temp < limit)
    			gapSequence.add(temp);
    	}
        int[] hibSequence = new int[gapSequence.size()];
    	
    	int index = gapSequence.size()-1; 

    	for(int i : gapSequence)
    	{	
    		hibSequence[index--] = i;
    	}
    	return hibSequence;
    }

    public static int[] getPowersOfTwo()
    {
    	ArrayList<Integer> gapSequence = new ArrayList<Integer>();

    	int temp = 0;

    	for (int i = 0; temp < 500; i++ ) 
    	{
    		temp = (int)(java.lang.Math.pow(2,i));	

    		gapSequence.add(temp);
    	}
        int[] powerSequence = new int[gapSequence.size()];
    	
    	int index = gapSequence.size()-1; 

    	for(int i : gapSequence)
    	{	
    		powerSequence[index--] = i;
    	}
    	return powerSequence;
    }

    public static int [] shellSort(int a[], int gaps[])
	{
		int gap;
		
		for (int p = 0; p < gaps.length; p++)
		{
			gap = gaps[p];
		
			for (int i = gap; i < gaps.length; i++) 
			{
				int j = i;
		
				int temp = a[i];
		
				while (j >= gap && a[j - gap] > temp) 
				{
					a[j] = a[j - gap];
		
					j = j - gap;
				}
				a[j] = temp;
			}
 		}

 		return a;
	}
}
class MyInfo
{

    String todaysDate = "09/NOV/2016";
    
    String assignmentNumber = "10B";

    public void identity()
    {
        // My info and class and assigmnegt date and all
    
        System.out.println("\n");
    
        System.out.println("Name : Mayur Tolani");
    
        System.out.println("Course : CS608");
    
        SimpleDateFormat dateformat3 = new SimpleDateFormat("dd/MMM/yyyy");
    
        Date assingmentDate = null;
    
        try
        {
            assingmentDate = dateformat3.parse(todaysDate); //Date printing, using the DATE class in java.
        }
        catch (ParseException ex) 
        {
              System.out.print(ex);
        }
        System.out.println("Assingment " +assignmentNumber+ "\nDone on : "+dateformat3.format(assingmentDate));
        
        System.out.println("--------------------------------------------------------");
    }
}
